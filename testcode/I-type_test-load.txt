class myc01_core_tester extends FlatSpec with ChiselScalatestTester{
   behavior of "myc01_core"
// test class body here
   it should "test_I-type_load" in {
//test case body here
    test(new myc01_core) { c =>
    //test body here
	
    
	//"b00000000||0001_rs1 0000||1_000_rd 0001||1_0000011".U   //lb
	//"b00000000||0001_rs1 0000||1_100_rd 0001||1_0000011".U   //lbu
	
	//"b00000000||0001_rs1 0000||1_001_rd 0001||1_0000011".U   //lh
	//"b00000000||0001_rs1 0000||1_101_rd 0001||1_0000011".U   //lhu
	//"b00000000||0001_rs1 0000||1_010_rd 0001||1_0000011".U   //lw	
    
	//lb   "b10000011_10000001_00010000_00000000".U
	//lbu  "b10000011_11000001_00010000_00000000".U
	//lh   "b10000011_10010001_00010000_00000000".U
	//lhu  "b10000011_11010001_00010000_00000000".U
	//lw   "b10000011_10100001_00010000_00000000".U	
	
	c.clock.step(1)
	
	//"b00000000||0001_rs1 0000||1_000_rd 0001||1_0000011".U   //lb
	c.io.inst.poke("b10000011_10000001_00010000_00000000".U)  
	c.io.dm.poke("b10000011_10000010_10000001_10000000".U)  
	c.clock.step(1)
	c.io.inst.poke(0.U)
	//"b00000000||0001_rs1 0000||1_000_rd 0001||1_0000011".U   //lb
	c.io.inst.poke("b10000011_10000001_00100000_00000000".U)  
	c.io.dm.poke("b10000011_10000010_10000001_10000000".U)  
	c.clock.step(1)
	c.io.inst.poke(0.U)
	//"b00000000||0001_rs1 0000||1_000_rd 0001||1_0000011".U   //lb
	c.io.inst.poke("b10000011_10000001_00110000_00000000".U)  
	c.io.dm.poke("b10000011_10000010_10000001_10000000".U)  
	c.clock.step(1)
	c.io.inst.poke(0.U)
	//"b00000000||0001_rs1 0000||1_000_rd 0001||1_0000011".U   //lb
	c.io.inst.poke("b10000011_10000001_01000000_00000000".U)  
	c.io.dm.poke("b10000011_10000010_10000001_10000000".U)  
	c.clock.step(1)
	c.io.inst.poke(0.U)

    //"b00000000||0001_rs1 0000||1_100_rd 0001||1_0000011".U   //lbu
	c.io.inst.poke("b10000011_11000001_00010000_00000000".U)  
	c.io.dm.poke("b10000011_10000010_10000001_10000000".U)  
	c.clock.step(1)
	c.io.inst.poke(0.U)
	//"b00000000||0001_rs1 0000||1_100_rd 0001||1_0000011".U   //lbu
	c.io.inst.poke("b10000011_11000001_00100000_00000000".U)  
	c.io.dm.poke("b10000011_10000010_10000001_10000000".U)  
	c.clock.step(1)
	c.io.inst.poke(0.U)
	//"b00000000||0001_rs1 0000||1_100_rd 0001||1_0000011".U   //lbu
	c.io.inst.poke("b10000011_11000001_00110000_00000000".U)  
	c.io.dm.poke("b10000011_10000010_10000001_10000000".U)  
	c.clock.step(1)
	c.io.inst.poke(0.U)
	//"b00000000||0001_rs1 0000||1_100_rd 0001||1_0000011".U   //lbu
	c.io.inst.poke("b10000011_11000001_01000000_00000000".U)  
	c.io.dm.poke("b10000011_10000010_10000001_10000000".U)  
	c.clock.step(1)
	c.io.inst.poke(0.U)
	
	//"b00000000||0001_rs1 0000||1_001_rd 0001||1_0000011".U   //lh
	c.io.inst.poke("b10000011_10010001_00110000_00000000".U)  
	c.io.dm.poke("b10000011_10000010_10000001_10000000".U)  
	c.clock.step(1)
	c.io.inst.poke(0.U)
	
	//"b00000000||0001_rs1 0000||1_101_rd 0001||1_0000011".U   //lhu
	c.io.inst.poke("b10000011_11010001_00110000_00000000".U)  
	c.io.dm.poke("b10000011_10000010_10000001_10000000".U)  
	c.clock.step(1)
	c.io.inst.poke(0.U)
	
	//"b00000000||0001_rs1 0000||1_010_rd 0001||1_0000011".U   //lw		
	c.io.inst.poke("b10000011_10100001_00010000_00000000".U)  
	c.io.dm.poke("b10000011_10000010_10000001_10000000".U)  
	c.clock.step(1)
	c.io.inst.poke(0.U)
    c.clock.step(10)
	 
   }
  }
 }